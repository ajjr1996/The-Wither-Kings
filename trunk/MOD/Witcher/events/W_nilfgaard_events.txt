namespace = nilfgaard

################################################
# Emperor Trait
################################################
# Emperor Evaluation
character_event = {
	id = nilfgaard.1
	desc = "Emperor evaluation"
	picture = GFX_evt_holy_emperor
	
	hide_window = yes
	
	trigger = {
		NOT = { culture = wilderness}
		has_landed_title = e_nilfgaard
		NOT = {
			trait = strong_emperor
			trait = weak_emperor
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		strong_emperor = {
			limit = { is_alive = yes }
			set_character_flag = previous_emperor
		}
		weak_emperor = {
			limit = { is_alive = yes }
			set_character_flag = previous_emperor
		}
	}
	option = {
		name = "Strong emperor"
		ai_chance = {
			factor = 1
			modifier = { factor = 5 trait = ambitious }
			modifier = { factor = 2 trait = genius }
			modifier = { factor = 2 trait = quick }
			modifier = { factor = 2 trait = diligent }
			modifier = { factor = 2 religion = solar }
			modifier = { factor = 2 culture = nilfgaardian }
			modifier = {
				factor = 2
				OR ={
					trait = elusive_shadow
					trait = grey_eminence
					trait = midas_touched
					trait = brilliant_strategist
					trait = the_sage
				}
			}
			modifier = {
				factor = 2
				is_adult = yes
				NOT = { has_character_modifier = old_age }
			}
			modifier = { # new emperor is automatiaclly weak if previous emperor (still alive) was weak
				factor = 0
				weak_emperor = { 
					has_character_flag = previous_emperor
				}
			}
			modifier = { # new emperor is automatiaclly weak if previous emperor (dead) was weak
				factor = 0
				has_character_flag = weak_emperor
			}
			modifier = { # new emperor is automatiaclly weak if previous emperor (still alive) had different dynasty
				factor = 0
				OR ={
					weak_emperor = { 
						has_character_flag = previous_emperor
						NOT = { dynasty = ROOT }
					}
					strong_emperor = { 
						has_character_flag = previous_emperor
						NOT = { dynasty = ROOT }
					}
				}
			}
			modifier = { # new emperor is automatiaclly weak if previous emperor (dead) had different dynasty
				factor = 0
				has_character_flag = different_dynasty_emperor
			}
		}
		character_event = { id = nilfgaard.2 }
		hidden_tooltip = {
			strong_emperor = { 
				limit = { has_character_flag = previous_emperor }
				clr_character_flag = previous_emperor
				remove_trait = strong_emperor
			}
			weak_emperor = { 
				limit = { has_character_flag = previous_emperor }
				clr_character_flag = previous_emperor
				remove_trait = weak_emperor
			}
			clr_character_flag = weak_emperor
			clr_character_flag = different_dynasty_emperor
		}
	}
	option = {
		name = "Weak emperor"
		ai_chance = {
			factor = 2
			modifier = { factor = 5 trait = content }
			modifier = { factor = 2 trait = slow }
			modifier = { factor = 2 trait = imbecile }
			modifier = { factor = 2 trait = inbred }
			modifier = { factor = 2 trait = lunatic }
			modifier = { factor = 2 trait = infirm }
			modifier = { factor = 5 trait = incapable }
			modifier = { factor = 5 is_female = yes }
			modifier = { factor = 10 NOT = { trait = human } }
			modifier = { factor = 10 is_adult = no }
			modifier = { factor = 2 trait = sorcerer }
			modifier = { factor = 2 has_character_modifier = magic_talent }
		}
		character_event = { id = nilfgaard.3 }
		hidden_tooltip = {
			strong_emperor = { 
				limit = { has_character_flag = previous_emperor }
				clr_character_flag = previous_emperor
				remove_trait = strong_emperor
			}
			weak_emperor = { 
				limit = { has_character_flag = previous_emperor }
				clr_character_flag = previous_emperor
				remove_trait = weak_emperor
			}
			clr_character_flag = weak_emperor
			clr_character_flag = different_dynasty_emperor
		}
	}
}
# Strong emperor trait gained
character_event = {
	id = nilfgaard.2
	desc = EVTDESCnilfgaard.2
	picture = GFX_evt_holy_emperor
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.2
		add_trait = strong_emperor
	}
}
# Weak emperor trait gained
character_event = {
	id = nilfgaard.3
	desc = EVTDESCnilfgaard.3
	picture = GFX_evt_holy_emperor
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.3
		add_trait = weak_emperor
	}
}
# Check if emperor is weak or heir is non-dynastic (on_death)
character_event = {
	id = nilfgaard.4
	desc = "Emperor died"
	picture = GFX_evt_holy_emperor
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			trait = weak_emperor
			trait = strong_emperor
		}
	}
	
	option = {
		name = "OK"
		current_heir = {
			if = {
				limit = { NOT = { dynasty = ROOT } }
				set_character_flag = different_dynasty_emperor
			}
			if = {
				limit = { ROOT = { trait = weak_emperor } }
				set_character_flag = weak_emperor
			}
		}
	}
}

################################################
# Hand out claims on weak emperor
################################################
# Give strong claim to ambitious direct vassals (on_bi_yearly_pulse)
character_event = {
	id = nilfgaard.10
	desc = EVTDESCnilfgaard.10
	picture = GFX_evt_lunatic
	
	trigger = {
		NOT = { culture = wilderness}
		trait = ambitious
		liege = { trait = weak_emperor }
		NOT = { has_claim = e_nilfgaard }
	}
	
	weight_multiplier = {
		days = 1
	}
	
	option = {
		name = EVTOPTAnilfgaard.10
		e_nilfgaard = { add_claim = ROOT }
	}
}
# Give strong claim to awesome unlanded relatives (on_bi_yearly_pulse)
character_event = {
	id = nilfgaard.11
	desc = EVTDESCnilfgaard.11
	picture = GFX_evt_lunatic
	
	trigger = {
		NOT = { culture = wilderness}
		OR = {
			trait = genius
			trait = elusive_shadow
			trait = grey_eminence
			trait = midas_touched
			trait = brilliant_strategist
			trait = the_sage
		}
		any_dynasty_member = {
			has_landed_title = e_nilfgaard
			trait = weak_emperor
		}
		NOT = { has_claim = e_nilfgaard }
	}
	
	weight_multiplier = {
		days = 1
	}
	
	option = {
		name = EVTOPTAnilfgaard.10
		e_nilfgaard = { add_claim = ROOT }
	}
}
#Promote characters with weak claims to strong ones (on_bi_yearly_pulse)
character_event = {
	id = nilfgaard.12
	desc = EVTDESCnilfgaard.12
	picture = GFX_evt_lunatic
	
	trigger = {
		NOT = { culture = wilderness}
		liege = { trait = weak_emperor }
		has_weak_claim = e_nilfgaard
		NOT = { has_claim = e_nilfgaard }
	}
	
	weight_multiplier = {
		days = 1
	}
	
	option = {
		name = EVTOPTAnilfgaard.12
		e_nilfgaard = { add_claim = ROOT }
	}
}

################################################
# Become strong emperor ambition
################################################
# Placeholder event
character_event = {
	id = nilfgaard.20
	desc = "Placehlder event for becoming strong emperor"
	picture = GFX_evt_lunatic
	
	trigger = {
		NOT = { culture = wilderness}
		has_ambition = obj_become_strong_emperor
	}
	
	mean_time_to_happen = {
		months = 280
	}
	
	option = {
		name = "OK"
		change_variable = { which = becoming_strong_emperor value = 1 }
	}
}
# Placeholder event
character_event = {
	id = nilfgaard.21
	desc = "Placehlder event for getting strong emperor trait"
	picture = GFX_evt_lunatic
	
	trigger = {
		NOT = { culture = wilderness}
		has_ambition = obj_become_strong_emperor
		check_variable = { which = becoming_strong_emperor value = 5 }
	}
	
	mean_time_to_happen = {
		months = 280
	}
	
	option = {
		name = "OK"
		add_trait = strong_emperor
	}
}
# One threat less - dispose of a strong claimant
# Loyal council - all your councilors like you
# Friends in low places - befriend a councilor
# Someone to trust - replace a councilor with content family member
# Your sword and shield - appoint new leader and reform Impera
# Crowned - have an official coronation
# Large dreams - gain ambitious trait
# Friends in high places - beferiend one of your vassal kings
# Consolidate - hand out a spare kingdom title
# Highest authority - increase the crown authority
# Traitors - deal with a plot against you

################################################
# Declared Nilfgaard Expansion War
################################################
# Target - Recieved DoW
narrative_event = {
	id = nilfgaard.100
	title = EVTNAMEnilfgaard.100
	desc = EVTDESCnilfgaard.100
	picture = GFX_evt_large_army
	
	is_triggered_only = yes
	
	option = { # Surrender
		name = EVTOPTAnilfgaard.100
		any_war = {
			limit = {
				using_cb = nilfgaard_invasion
				defender = { character = ROOT }
				attacker = { has_landed_title = e_nilfgaard }
			}
			end_war = invalid
		}
		prestige = -200
		e_nilfgaard = {
			holder_scope = {
				set_defacto_vassal = ROOT
				letter_event = { id = nilfgaard.101 }
			}
		}
		ai_chance = {
			factor = 5
			modifier = { factor = 2 trait = craven }
			modifier = {
				factor = 4
				e_nilfgaard = { holder_scope = { reverse_opinion = { who = ROOT value = 50 } } }
			}
			modifier = { factor = 1.2 e_nilfgaard = { holder_scope = { realm_size = 500 } } }
			modifier = { factor = 1.4 e_nilfgaard = { holder_scope = { realm_size = 600 } } }
			modifier = { factor = 1.7 e_nilfgaard = { holder_scope = { realm_size = 700 } } }
			modifier = { factor = 2 e_nilfgaard = { holder_scope = { realm_size = 800 } } }
			modifier = { factor = 2.4 e_nilfgaard = { holder_scope = { realm_size = 900 } } }
			modifier = { factor = 3 e_nilfgaard = { holder_scope = { realm_size = 1000 } } }
		}
	}
	option = { # Call allies
		name = EVTOPTBnilfgaard.100
		any_independent_ruler = {
			limit = {
				culture_group = northern_group
				tier = KING
				independent = yes
				NOT = { has_landed_title = k_eternal_fire }
			}
			letter_event = { id = nilfgaard.102 tooltip = EVTTOOLTIPnilfgaard.102}
		}
		ai_chance = {
			factor = 40
			modifier = { factor = 2 trait = brave }
		}
	}
	option = { # Fight alone
		name = EVTOPTCnilfgaard.100
		prestige = 20
		if = {
			limit = { NOT = { trait = brave } }
			add_trait = brave
		}
		ai_chance = {
			factor = 5
			modifier = { factor = 2 trait = brave }
			modifier = { factor = 3 trait = arbitrary }
			modifier = { factor = 3 trait = lunatic }
			modifier = { factor = 3 trait = imbecile }
		}
	}
}
# Emperor - Target surrenders
letter_event = {
	id = nilfgaard.101
	desc = EVTDESCnilfgaard.101
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.101
		prestige = 200
	}
}
# Independant Northern Kings - Join in war against Nilfgaard
letter_event = {
	id = nilfgaard.102
	desc = EVTDESCnilfgaard.102
	
	is_triggered_only = yes
	
	option = { # Join
		name = EVTOPTAnilfgaard.102
		join_defender_wars = FROM
		ai_chance = {
			factor = 4
			modifier = { # Neighbors Nilfgaard
				factor = 4
				any_realm_province = {
					any_neighbor_province = {
						owner = {
							top_liege = { has_landed_title = e_nilfgaard }
						}
					}
				}
			}
			modifier = { factor = 2 trait = brave }
			modifier = { factor = 0.5 trait = craven }
		}
	}
	option = { # Don't join
		name = EVTOPTBnilfgaard.102
		prestige = -20
		FROM = { letter_event = { id = nilfgaard.103 days = 5 } }
		ai_chance = {
			factor = 1
			modifier = { factor = 2 NOT = { opinion = { who = FROM value = 0 } } }
			modifier ={ factor = 2 war =  yes }
			modifier ={ factor = 2 NOT = { wealth =  0 } }
			modifier = { factor = 1.2 e_nilfgaard = { holder_scope = { realm_size = 500 } } }
			modifier = { factor = 1.4 e_nilfgaard = { holder_scope = { realm_size = 600 } } }
			modifier = { factor = 1.7 e_nilfgaard = { holder_scope = { realm_size = 700 } } }
			modifier = { factor = 2 e_nilfgaard = { holder_scope = { realm_size = 800 } } }
			modifier = { factor = 2.4 e_nilfgaard = { holder_scope = { realm_size = 900 } } }
			modifier = { factor = 3 e_nilfgaard = { holder_scope = { realm_size = 1000 } } }
		}
	}
	option = { # Financial support
		name = EVTOPTCnilfgaard.102
		transfer_scaled_wealth = { to = FROM value = 10.0 }
		FROM = { letter_event = { id = nilfgaard.104 days = 5 } }
		ai_chance = {
			factor = 3
			modifier = { factor = 0.05 NOT = { wealth = 100 } }
			modifier = { factor = 2 wealth = 500 }
			modifier = { factor = 2 scaled_wealth = 10.0 }
			modifier = { # Don't neighbor Nilfgaard
				factor = 5
				any_realm_province = {
					any_neighbor_province = {
						owner = {
							top_liege = { NOT = { has_landed_title = e_nilfgaard } }
						}
					}
				}
			}
		}
	}
}
# Target - Don't join
letter_event = {
	id = nilfgaard.103
	desc = EVTDESCnilfgaard.103
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.103
	}
}
# Target - Financial support
letter_event = {
	id = nilfgaard.104
	desc = EVTDESCnilfgaard.104
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.104
	}
}
# Province - Ping -Victory, what should do with title
province_event = {
	id = nilfgaard.110
	desc = "Ping through province so I can get the title it belongs to"
	picture = GFX_evt_victory_arch_byzantine
	
	is_triggered_only = yes
	hide_window = yes
	
	option = {
		name = "OK"
		e_nilfgaard = {
			holder_scope = {
				narrative_event = { id = nilfgaard.111 }
			}
		}
	}
}
# Emperor - Victory, what should do with title
narrative_event = {
	id = nilfgaard.111
	title = EVTNAMEnilfgaard.111
	desc = EVTDESCnilfgaard.111
	picture = GFX_evt_victory_arch_byzantine
	
	is_triggered_only = yes
	
	option = { # Keep the title
		name = EVTOPTAnilfgaard.111
		FROM = {
			kingdom = {
				usurp_title = ROOT
			}
		}
	}
	option = { # Grant the title
		name = EVTOPTBnilfgaard.111
		if = {
			limit = { ai = yes }
			character_event = { id = nilfgaard.112 }
		}
		if = {
			limit = { ai = no }
			FROM = {
				kingdom = {
					usurp_title = ROOT
				}
			}
		}
	}
	option = { # Destroy title
		name = EVTOPTCnilfgaard.111
		prestige = 100
		FROM = {
			kingdom = {
				destroy_landed_title = THIS
			}
		}
		ai_chance = { factor = 0 }
	}
}
# Emperor - AI - Granting the title
character_event = {
	id = nilfgaard.112
	desc = "Granting the title"
	picture = GFX_evt_victory_arch_byzantine
	
	is_triggered_only = yes
	hide_window = yes
	
	option = {
		name = "Local duke with claim"
		trigger = {
			FROMFROM = {
				kingdom = {
					ROOT = {
						any_vassal = {
							tier = duke
							has_claim = PREVPREV
							dejure_liege_title = {
								title = PREVPREVPREV
							}
						}
					}
				}
			}
		}
		FROMFROM = {
			kingdom = {
				ROOT = {
					random_vassal = {
						limit = {
							tier = duke
							has_claim = PREVPREV
							dejure_liege_title = {
								title = PREVPREVPREV
							}
						}
						FROMFROM = {
							kingdom = { 
								usurp_title = PREVPREV
							}
						}
						character_event = { id = nilfgaard.113 }
						opinion = { modifier = opinion_granted_kingdom who = ROOT }
					}
				}
			}
		}
		ai_chance = { factor = 2 }
	}
	option = {
		name = "Local duke"
		trigger = {
			FROMFROM = {
				kingdom = {
					ROOT = {
						any_vassal = {
							dejure_liege_title = {
								title = PREVPREVPREV
							}
						}
					}
				}
			}
		}
		FROMFROM = {
			kingdom = {
				ROOT = {
					random_vassal = {
						limit = {
							tier = duke
							dejure_liege_title = {
								title = PREVPREVPREV
							}
						}
						FROMFROM = {
							kingdom = { 
								usurp_title = PREVPREV
							}
						}
						character_event = { id = nilfgaard.113 }
						opinion = { modifier = opinion_granted_kingdom who = ROOT }
					}
				}
			}
		}
		ai_chance = { factor = 1 }
	}
	option = {
		name = "Dynasty member"
		trigger = {
			any_dynasty_member = {
				is_landed = no
				is_female = no
			}
		}
		random_dynasty_member = {
			limit = {
				is_landed = no
				is_female = no
			}
			FROMFROM = {
				kingdom = {
					usurp_title = PREVPREV
				}
			}
			character_event = { id = nilfgaard.113 }
			opinion = { modifier = opinion_granted_kingdom who = ROOT }
		}
		ai_chance = { factor = 2 }
	}
	option = {
		name = "Friend"
		trigger = {
			any_friend = {
				is_landed = no
				is_female = no
			}
		}
		random_friend ={
			limit = {
				is_landed = no
				is_female = no
			}
			FROMFROM = {
				kingdom = {
					usurp_title = PREVPREV
				}
			}
			character_event = { id = nilfgaard.113 }
			opinion = { modifier = opinion_granted_kingdom who = ROOT }
		}
		ai_chance = { factor = 2 }
	}
	option = {
		name = "Random noble"
		create_character = {
			random_traits = yes
			dynasty = random
			female = no
			religion = ROOT
			culture = ROOT
		}
		new_character = {
			FROMFROM = {
				kingdom = {
					usurp_title = PREVPREV
				}
			}
			character_event = { id = nilfgaard.113 }
			opinion = { modifier = opinion_granted_kingdom who = ROOT }
		}
		ai_chance = { factor = 1 }
	}
}
# New Ruler - Getting county and vassals of the title
character_event = {
	id = nilfgaard.113
	desc = EVTDESCnilfgaard.113
	picture = GFX_evt_victory_arch_byzantine
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.113
		liege = {
			any_vassal = {
				limit = { de_jure_liege = ROOT }
				set_defacto_liege = ROOT
				if = {
					limit = { ai = no }
					character_event = { id = nilfgaard.114 }
				}
			}
		}
		if = {
			limit = { NOT = { num_of_count_titles = 1 } }
			random_vassal = {
				random_demesne_title = {
					limit = { tier = count }
					usurp_title = ROOT
				}
			}
		}
	}
}
# Vassals -Notification - Getting county and vassals of the title
character_event = {
	id = nilfgaard.114
	desc = EVTDESCnilfgaard.114
	picture = GFX_evt_victory_arch_byzantine
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAnilfgaard.114
}

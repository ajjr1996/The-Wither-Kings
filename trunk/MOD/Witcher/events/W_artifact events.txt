namespace = artifact
# TO DO - events for Raven's Armor, Seeing Stone and Nehalenia's Mirror
# TO DO - events for Sephirots

################################################
# Passing artifacts (breaks if more than 3 characters with artifacts die at same time)
################################################
# Hidden - Selecting heir for artifacts (on_death)
character_event = {
	id = artifact.1
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		OR = {
			trait = gwyhyr_sword
			trait = sihil
			trait = gveir
			trait = jaskolka
			trait = balmur
			trait = loathen
			trait = zefhar_bow
			trait = ravens_armor
			trait = nehalenias_mirror
			trait = brinsingamen
			trait = holy_grail
			trait = seeing_stone
			trait = choccmah
			trait = gvevrath
			trait = kethaar
			trait = kezath
			trait = maalkad
			trait = nehtza
			trait = oth
			trait = tipperath
			trait = veenah
			trait = yesath
			trait = purple_living_bone
			trait = conynhaela
			trait = purple_living_bone_and_conynhaela
		}
	}
	
	immediate = { # Select the best heir and give him a temp cached trait
		if = { # Dynastic heir
			limit = {
				is_patrician = no
				current_heir = { dynasty = ROOT NOT = { character = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			current_heir = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Child
			limit = {
				is_patrician = no
				any_child = { dynasty = ROOT is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_child = {
				limit = { dynasty = ROOT is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Sibling
			limit = {
				is_patrician = no
				any_sibling = { is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_sibling = {
				limit = { is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Close dynasty member
			limit = {
				is_patrician = no
				any_dynasty_member = { is_close_relative = ROOT is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_dynasty_member = {
				limit = { is_close_relative = ROOT is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Dynasty member
			limit = {
				is_patrician = no
				any_dynasty_member = { NOT = { is_close_relative = ROOT } is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_dynasty_member = {
				limit = { NOT = { is_close_relative = ROOT } is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Bastard child
			limit = {
				is_patrician = no
				any_child = { NOT = { dynasty = ROOT } is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_child = {
				limit = { NOT = { dynasty = ROOT } is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Spouse
			limit = {
				is_patrician = no
				spouse = { is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			spouse = {
				limit = { is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Non-dynastic heir
			limit = {
				is_patrician = no
				current_heir = { NOT = { dynasty = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			current_heir = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Liege
			limit = {
				is_patrician = no
				liege = { NOT = { character = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			liege = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Vassal
			limit = {
				is_patrician = no
				liege = { character = ROOT }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_vassal = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Family manor heir for republics
			limit = {
				is_patrician = yes
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			family_palace = {
				current_heir = {
					if = {
						limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
						set_character_flag = artifact_heir_temp_3
						ROOT = { add_trait = artifact_temp_3 }
					}
					if = {
						limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
						set_character_flag = artifact_heir_temp_2
						ROOT = { add_trait = artifact_temp_2 }
					}
					if = {
						limit = { NOT = { artifact_heir_temp = { always = yes } } }
						set_character_flag = artifact_heir_temp_1
						ROOT = { add_trait = artifact_temp_1 }
					}
					add_trait = artifact_heir_temp
				}
			}
		}
	}
	
	option = { # Character with cached trait gets event
		name = OK
		if = {
			limit = { ai = no }
			artifact_heir_temp = { character_event = { id = artifact.2 days = 1 } }
		}
		if = {
			limit = { ai = yes }
			artifact_heir_temp = { character_event = { id = artifact.2 } }
		}
	}
}
# Heir - Getting artifacts
character_event = {
	id = artifact.2
	desc = EVTDESCartifact.2
	picture = GFX_evt_death
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			AND = {
				FROM = { trait = artifact_temp_1 }
				has_character_flag = artifact_heir_temp_1
			}
			AND = {
				FROM = { trait = artifact_temp_2 }
				has_character_flag = artifact_heir_temp_2
			}
			AND = {
				FROM = { trait = artifact_temp_3 }
				has_character_flag = artifact_heir_temp_3
			}
		}
	}
	
	option = {
		name = EVTOPTAartifact.2
		# Gwyhyr sword - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				NOT = { trait = gwyhyr_sword }
			}
			FROM = { remove_trait = gwyhyr_sword }
			add_trait = gwyhyr_sword
		}
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				trait = gwyhyr_sword
			}
			FROM = { remove_trait = gwyhyr_sword }
			character_event = { id = artifact.101 tooltip = EVTTOOLTIPartifact.101 }
		}
		# Sihil
		if = {
			limit = { FROM = { trait = sihil } }
			FROM = { remove_trait = sihil }
			add_trait = sihil
		}
		# Gveir
		if = {
			limit = { FROM = { trait = gveir } }
			FROM = { remove_trait = gveir }
			add_trait = gveir
		}
		# Jaskolka
		if = {
			limit = { FROM = { trait = jaskolka } }
			FROM = { remove_trait = jaskolka }
			add_trait = jaskolka
		}
		# Balmur
		if = {
			limit = { FROM = { trait = balmur } }
			FROM = { remove_trait = balmur }
			add_trait = balmur
		}
		# Loathen
		if = {
			limit = { FROM = { trait = loathen } }
			FROM = { remove_trait = loathen }
			add_trait = loathen
		}
		# Zefhar bow - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = zefhar_bow }
				NOT = { trait = zefhar_bow }
			}
			FROM = { remove_trait = zefhar_bow }
			add_trait = zefhar_bow
		}
		if = {
			limit = {
				FROM = { trait = zefhar_bow }
				trait = zefhar_bow
			}
			FROM = { remove_trait = zefhar_bow }
			character_event = { id = artifact.108 tooltip = EVTTOOLTIPartifact.108 }
		}
		# Raven's armor
		if = {
			limit = { FROM = { trait = ravens_armor } }
			FROM = { remove_trait = ravens_armor }
			add_trait = ravens_armor
		}
		# Nehalenia's Mirror - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				NOT = { trait = nehalenias_mirror }
			}
			FROM = { remove_trait = nehalenias_mirror }
			add_trait = nehalenias_mirror
		}
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				trait = nehalenias_mirror
			}
			FROM = { remove_trait = nehalenias_mirror }
			character_event = { id = artifact.102 tooltip = EVTTOOLTIPartifact.102 }
		}
		# Brinsingamen - special, disapear when inherited
		if = {
			limit = { FROM = { trait = brinsingamen } }
			FROM = { remove_trait = brinsingamen }
			character_event = { id = artifact.1021 }
		}
		# Holy Grail - special, disapear when inherited
		if = {
			limit = { FROM = { trait = holy_grail } }
			FROM = { remove_trait = holy_grail }
		}
		# Seeing Stone - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = seeing_stone }
				NOT = { trait = seeing_stone }
			}
			FROM = { remove_trait = seeing_stone }
			add_trait = seeing_stone
		}
		if = {
			limit = {
				FROM = { trait = seeing_stone }
				trait = seeing_stone
			}
			FROM = { remove_trait = seeing_stone }
			character_event = { id = artifact.109 tooltip = EVTTOOLTIPartifact.109 }
		}
		# Chocc'mah
		if = {
			limit = { FROM = { trait = choccmah } }
			FROM = { remove_trait = choccmah }
			add_trait = choccmah
		}
		# Gve'vrath
		if = {
			limit = { FROM = { trait = gvevrath } }
			FROM = { remove_trait = gvevrath }
			add_trait = gvevrath
		}
		# Keth'aar
		if = {
			limit = { FROM = { trait = kethaar } }
			FROM = { remove_trait = kethaar }
			add_trait = kethaar
		}
		# Kezath
		if = {
			limit = { FROM = { trait = kezath } }
			FROM = { remove_trait = kezath }
			add_trait = kezath
		}
		# Maal'kad
		if = {
			limit = { FROM = { trait = maalkad } }
			FROM = { remove_trait = maalkad }
			add_trait = maalkad
		}
		# Neh'tza
		if = {
			limit = { FROM = { trait = nehtza } }
			FROM = { remove_trait = nehtza }
			add_trait = nehtza
		}
		# 'Oth
		if = {
			limit = { FROM = { trait = oth } }
			FROM = { remove_trait = oth }
			add_trait = oth
		}
		# Tipperath
		if = {
			limit = { FROM = { trait = tipperath } }
			FROM = { remove_trait = tipperath }
			add_trait = tipperath
		}
		# Veen'ah
		if = {
			limit = { FROM = { trait = veenah } }
			FROM = { remove_trait = veenah }
			add_trait = veenah
		}
		# Y'esath
		if = {
			limit = { FROM = { trait = yesath } }
			FROM = { remove_trait = yesath }
			add_trait = yesath
		}
		# Purple Living Bone - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = purple_living_bone }
			add_trait = purple_living_bone
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone }
			character_event = { id = artifact.103 tooltip = EVTTOOLTIPartifact.103 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = purple_living_bone }
			character_event = { id = artifact.110 tooltip = EVTTOOLTIPartifact.110 }
		}
		# Conynhaela - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = conynhaela }
				NOT = { trait = conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = conynhaela }
			add_trait = conynhaela
		}
		if = {
			limit = {
				FROM = { trait = conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = conynhaela }
			character_event = { id = artifact.105 tooltip = EVTTOOLTIPartifact.105 }
		}
		if = {
			limit = {
				FROM = { trait = conynhaela }
				NOT = { trait = conynhaela }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = conynhaela }
			character_event = { id = artifact.111 tooltip = EVTTOOLTIPartifact.111 }
		}
		# Purple Living Bone and Conynhaela - non-unique, need to cover case when heir already have the trait
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone }
				NOT = { trait = conynhaela }
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			character_event = { id = artifact.107 tooltip = EVTTOOLTIPartifact.107 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
			character_event = { id = artifact.104 tooltip = EVTTOOLTIPartifact.104 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
			character_event = { id = artifact.106 tooltip = EVTTOOLTIPartifact.106 }
		}
		hidden_tooltip = {
			remove_trait = artifact_heir_temp
			clr_character_flag = artifact_heir_temp_1
			clr_character_flag = artifact_heir_temp_2
			clr_character_flag = artifact_heir_temp_3
			FROM = {
				remove_trait = artifact_temp_1
				remove_trait = artifact_temp_2
				remove_trait = artifact_temp_3
			}
		}
	}
}

################################################
# Confiscating artifacts from prisoner
################################################
# Confiscating artifacts from prisoner
character_event = {
	id = artifact.100
	desc = EVTDESCartifact.100
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.100
		FROM = { opinion = { modifier = opinion_dishonorable who = ROOT } }
		# Gwyhyr sword
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				NOT = { trait = gwyhyr_sword }
			}
			FROM = { remove_trait = gwyhyr_sword }
			add_trait = gwyhyr_sword
		}
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				trait = gwyhyr_sword
			}
			FROM = { remove_trait = gwyhyr_sword }
			character_event = { id = artifact.101 tooltip = EVTTOOLTIPartifact.101 }
		}
		# Sihil
		if = {
			limit = { FROM = { trait = sihil } }
			FROM = { remove_trait = sihil }
			add_trait = sihil
		}
		# Gveir
		if = {
			limit = { FROM = { trait = gveir } }
			FROM = { remove_trait = gveir }
			add_trait = gveir
		}
		# Jaskolka
		if = {
			limit = { FROM = { trait = jaskolka } }
			FROM = { remove_trait = jaskolka }
			add_trait = jaskolka
		}
		# Balmur
		if = {
			limit = { FROM = { trait = balmur } }
			FROM = { remove_trait = balmur }
			add_trait = balmur
		}
		# Loathen
		if = {
			limit = { FROM = { trait = loathen } }
			FROM = { remove_trait = loathen }
			add_trait = loathen
		}
		# Zefhar bow
		if = {
			limit = {
				FROM = { trait = zefhar_bow }
				NOT = { trait = zefhar_bow }
			}
			FROM = { remove_trait = zefhar_bow }
			add_trait = zefhar_bow
		}
		if = {
			limit = {
				FROM = { trait = zefhar_bow }
				trait = zefhar_bow
			}
			FROM = { remove_trait = zefhar_bow }
			character_event = { id = artifact.108 tooltip = EVTTOOLTIPartifact.108 }
		}
		# Raven's armor
		if = {
			limit = { FROM = { trait = ravens_armor } }
			FROM = { remove_trait = ravens_armor }
			add_trait = ravens_armor
		}
		# Nehalenia's Mirror
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				NOT = { trait = nehalenias_mirror }
			}
			FROM = { remove_trait = nehalenias_mirror }
			add_trait = nehalenias_mirror
		}
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				trait = nehalenias_mirror
			}
			FROM = { remove_trait = nehalenias_mirror }
			character_event = { id = artifact.102 tooltip = EVTTOOLTIPartifact.102 }
		}
		# Seeing Stone
		if = {
			limit = {
				FROM = { trait = seeing_stone }
				NOT = { trait = seeing_stone }
			}
			FROM = { remove_trait = seeing_stone }
			add_trait = seeing_stone
		}
		if = {
			limit = {
				FROM = { trait = seeing_stone }
				trait = seeing_stone
			}
			FROM = { remove_trait = seeing_stone }
			character_event = { id = artifact.109 tooltip = EVTTOOLTIPartifact.109 }
		}
		# Chocc'mah
		if = {
			limit = { FROM = { trait = choccmah } }
			FROM = { remove_trait = choccmah }
			add_trait = choccmah
		}
		# Gve'vrath
		if = {
			limit = { FROM = { trait = gvevrath } }
			FROM = { remove_trait = gvevrath }
			add_trait = gvevrath
		}
		# Keth'aar
		if = {
			limit = { FROM = { trait = kethaar } }
			FROM = { remove_trait = kethaar }
			add_trait = kethaar
		}
		# Kezath
		if = {
			limit = { FROM = { trait = kezath } }
			FROM = { remove_trait = kezath }
			add_trait = kezath
		}
		# Maal'kad
		if = {
			limit = { FROM = { trait = maalkad } }
			FROM = { remove_trait = maalkad }
			add_trait = maalkad
		}
		# Neh'tza
		if = {
			limit = { FROM = { trait = nehtza } }
			FROM = { remove_trait = nehtza }
			add_trait = nehtza
		}
		# 'Oth
		if = {
			limit = { FROM = { trait = oth } }
			FROM = { remove_trait = oth }
			add_trait = oth
		}
		# Tipperath
		if = {
			limit = { FROM = { trait = tipperath } }
			FROM = { remove_trait = tipperath }
			add_trait = tipperath
		}
		# Veen'ah
		if = {
			limit = { FROM = { trait = veenah } }
			FROM = { remove_trait = veenah }
			add_trait = veenah
		}
		# Y'esath
		if = {
			limit = { FROM = { trait = yesath } }
			FROM = { remove_trait = yesath }
			add_trait = yesath
		}
		# Purple living bone
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = purple_living_bone }
			add_trait = purple_living_bone
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone }
			character_event = { id = artifact.103 tooltip = EVTTOOLTIPartifact.103 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = purple_living_bone }
			add_trait = purple_living_bone
			character_event = { id = artifact.110 tooltip = EVTTOOLTIPartifact.110 }
		}
		# Conynhaela
		if = {
			limit = {
				FROM = { trait = conynhaela }
				NOT = { trait = conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = conynhaela }
			add_trait = conynhaela
		}
		if = {
			limit = {
				FROM = { trait = conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = conynhaela }
			character_event = { id = artifact.105 tooltip = EVTTOOLTIPartifact.105 }
		}
		if = {
			limit = {
				FROM = { trait = conynhaela }
				NOT = { trait = conynhaela }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = conynhaela }
			add_trait = conynhaela
			character_event = { id = artifact.111 tooltip = EVTTOOLTIPartifact.111 }
		}
		# Living Purple Bone and Conynhaela
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone }
				NOT = { trait = conynhaela }
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			character_event = { id = artifact.107 tooltip = EVTTOOLTIPartifact.107 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
			character_event = { id = artifact.104 tooltip = EVTTOOLTIPartifact.104 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
			character_event = { id = artifact.106 tooltip = EVTTOOLTIPartifact.106 }
		}
	}
	option = {
		name = EVTOPTBartifact.100
	}
}

################################################
# Duplicate artifacts when inheriting or confiscating them
################################################
# Already have Gwyhyr sword
character_event = {
	id = artifact.101
	desc = EVTDESCartifact.101
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.101
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.101
		trigger = {
			any_dynasty_member = {
				NOT = { trait = gwyhyr_sword }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = gwyhyr_sword }
				is_close_relative = ROOT
			}
			add_trait = gwyhyr_sword
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to marshal
		name = EVTOPTBartifact.101
		trigger = {
			job_marshal = { NOT = { trait = gwyhyr_sword } }
		}
		job_marshal = {
			limit = { NOT = { trait = gwyhyr_sword } }
			add_trait = gwyhyr_sword
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Nehalenia's Mirror
character_event = {
	id = artifact.102
	desc = EVTDESCartifact.102
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.102
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.102
		trigger = {
			any_dynasty_member = {
				NOT = { trait = nehalenias_mirror }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = nehalenias_mirror }
				is_close_relative = ROOT
			}
			add_trait = nehalenias_mirror
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to spouse
		name = EVTOPTBartifact.102
		trigger = {
			spouse = { NOT = { trait = nehalenias_mirror } }
		}
		spouse = {
			limit = { NOT = { trait = nehalenias_mirror } }
			add_trait = nehalenias_mirror
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Living Purple Bone
character_event = {
	id = artifact.103
	desc = EVTDESCartifact.103
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.103
		wealth = 50
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.103
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Getting both herbs when already have Living Purple Bone
character_event = {
	id = artifact.104
	desc = EVTDESCartifact.104
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell Living Purple Bone
		name = EVTOPTAartifact.104
		wealth = 50
		remove_trait = purple_living_bone
	}
	option = { # Give Living Purple Bone to relative
		name = EVTOPTBartifact.104
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Already have Conynhaela
character_event = {
	id = artifact.105
	desc = EVTDESCartifact.105
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.105
		wealth = 50
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.105
		trigger = {
			any_dynasty_member = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
			add_trait = conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Getting both herbs when already have Conynhaela
character_event = {
	id = artifact.106
	desc = EVTDESCartifact.106
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell Conynhaela
		name = EVTOPTAartifact.106
		wealth = 50
		remove_trait = conynhaela
	}
	option = { # Give Conynhaela to relative
		name = EVTOPTBartifact.106
		trigger = {
			any_dynasty_member = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
			add_trait = conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Already have Living Purple Bone and Conynhaela
character_event = {
	id = artifact.107
	desc = EVTDESCartifact.107
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.107
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.107
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone_and_conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone_and_conynhaela }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone_and_conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Zefhar bow
character_event = {
	id = artifact.108
	desc = EVTDESCartifact.108
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.108
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.108
		trigger = {
			any_dynasty_member = {
				NOT = { trait = zefhar_bow }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = zefhar_bow }
				is_close_relative = ROOT
			}
			add_trait = zefhar_bow
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to marshal
		name = EVTOPTBartifact.108
		trigger = {
			job_marshal = { NOT = { trait = zefhar_bow } }
		}
		job_marshal = {
			limit = { NOT = { trait = zefhar_bow } }
			add_trait = zefhar_bow
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Seeing stone
character_event = {
	id = artifact.109
	desc = EVTDESCartifact.109
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.109
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.109
		trigger = {
			any_dynasty_member = {
				NOT = { trait = seeing_stone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = seeing_stone }
				is_close_relative = ROOT
			}
			add_trait = seeing_stone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to spymaster
		name = EVTOPTBartifact.109
		trigger = {
			job_spymaster = { NOT = { trait = seeing_stone } }
		}
		job_spymaster = {
			limit = { NOT = { trait = seeing_stone } }
			add_trait = seeing_stone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Getting Living Purple Bone when already have both herbs
character_event = {
	id = artifact.110
	desc = EVTDESCartifact.110
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell Living Purple Bone
		name = EVTOPTAartifact.110
		wealth = 50
		remove_trait = purple_living_bone
	}
	option = { # Give Living Purple Bone to relative
		name = EVTOPTBartifact.110
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Getting Conynhaela when already have both herbs
character_event = {
	id = artifact.111
	desc = EVTDESCartifact.111
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = { # Sell Conynhaela
		name = EVTOPTAartifact.111
		wealth = 50
		remove_trait = conynhaela
	}
	option = { # Give Conynhaela to relative
		name = EVTOPTBartifact.111
		trigger = {
			any_dynasty_member = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
			add_trait = conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}

################################################
# Gwyhyr swords
################################################
# Ping - Courtier offers to sell his sword
character_event = {
	id = artifact.1000
	desc = PING
	picture = GFX_evt_emissary
	
	capable_only = yes
	
	trigger = {
		ai = yes
		trait = gwyhyr_sword
		NOT = { trait = master_warrior }
		NOT = { trait = skilled_warrior }
		NOT = { trait = trained_warrior }
		liege = {
			wealth = 100
			NOT = { trait = gwyhyr_sword }
		}
	}
	
	mean_time_to_happen = {
		months = 60
		modifier = { factor = 0.5 liege = { wealth = 200 } }
		modifier = { factor = 0.5 liege = { wealth = 300 } }
		modifier = { factor = 0.5 liege = { wealth = 400 } }
		modifier = {
			factor = 4
			liege = {
				OR = {
					trait = sihil
					trait = gveir
					trait = jaskolka
					trait = balmur
					trait = loathen
					trait = zefhar_bow
				}
			}
		}
	}
	
	option = {
		name = "OK"
		liege = { character_event = { id = artifact.1001 } }
	}
}
# Liege - Courtier offers to sell his sword
character_event = {
	id = artifact.1001
	desc = EVTDESCartifact.1001
	picture = GFX_evt_emissary
	
	is_triggered_only = yes
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	
	option = { # Buy
		name = EVTOPTAartifact.1001
		FROM = {
			wealth = 100
			remove_trait = gwyhyr_sword
		}
		wealth = -100
		add_trait = gwyhyr_sword
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = proud }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 200 }
		}
	}
	option = { # Don't buy
		name = EVTOPTBartifact.1001
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = content }
			modifier = { factor = 2 war = yes }
		}
	}
}
# Merchant offers to sell sword
character_event = {
	id = artifact.1002
	desc = EVTDESCartifact.1002
	picture = GFX_evt_market
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = gwyhyr_sword }
		wealth = 150
	}
	
	mean_time_to_happen = {
		months = 5000
		modifier = { factor = 0.5 wealth = 300 }
		modifier = { factor = 0.5 wealth = 600 }
		modifier = { factor = 0.5 wealth = 900 }
		modifier = { factor = 0.5 trait = ambitious }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = trusting }
		modifier = { factor = 1.1 trait = paranoid }
		modifier = { factor = 1.1 trait = greedy }
		modifier = {
			factor = 4
			OR = {
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = { # Buy
		name = EVTOPTAartifact.1002
		wealth = -150
		add_trait = gwyhyr_sword
		hidden_tooltip = {
			random = {
				chance = 20
				character_event = { id = artifact.1003 days = 70 random = 20 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = charitable }
			modifier = { factor = 2 trait = trusting }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 300 }
		}
	}
	option = { # Don't buy
		name = EVTOPTBartifact.1002
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = paranoid }
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = content }
			modifier = { factor = 2 war = yes }
			modifier = { factor = 2 ai = yes }
		}
	}
}
# Sword sold by merchant turned out to be a fake
character_event = {
	id = artifact.1003
	desc = EVTDESCartifact.1003
	picture = GFX_evt_bad_news
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1003
		remove_trait = gwyhyr_sword
		if = {
			limit = { NOT = { trait = trusting} }
			random = {
				chance = 20
				add_trait = trusting
				hidden_tooltip = { character_event = { id = 38250 } }
			}
		}
	}
}
# Found sword in your castle
character_event = {
	id = artifact.1004
	desc = EVTDESCartifact.1004
	picture = GFX_evt_castle_construction
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = gwyhyr_sword }
	}
	
	mean_time_to_happen = {
		months = 12000
		modifier = { factor = 0.5 trait = ambitious }
		modifier = { factor = 0.7 trait = diligent }
		modifier = { factor = 0.9 trait = shy }
		modifier = { factor = 0.9 trait = patient }
		modifier = { factor = 1.3 trait = slothful }
		modifier = { factor = 1.1 trait = gregarious }
		modifier = { factor = 1.1 trait = wroth }
		modifier = {
			factor = 4
			OR = {
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = {
		name = EVTOPTAartifact.1004
		add_trait = gwyhyr_sword
	}
}
# Traveling knight with sword
character_event = {
	id = artifact.1005
	desc = EVTDESCartifact.1005
	picture = GFX_evt_knight_kneeling
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = gwyhyr_sword }
	}
	
	mean_time_to_happen = {
		months = 10000
		modifier = { factor = 0.5 trait = ambitious }
		modifier = {
			factor = 4
			OR = {
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = { #  Offer to buy
		name = EVTOPTAartifact.1005
		custom_tooltip = {
			text = offer_to_buy_the_sword
			hidden_tooltip = {
				random_list = {
					50 = { character_event = { id = artifact.1006 days = 1 } }
					50 = { character_event = { id = artifact.1007 days = 1 } }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = charitable }
			modifier = { factor = 2 trait = honest }
			modifier = { factor = 2 trait = kind }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 300 }
		}
	}
	option = { # Take with force
		name = EVTOPTBartifact.1005
		custom_tooltip = { text = take_sword_by_force }
		add_trait = gwyhyr_sword
		if = {
			limit = { NOT = { trait = greedy } }
			random = {
				chance = 50
				add_trait = greedy
				hidden_tooltip = { character_event = { id = 38252 } }
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = deceitful }
			modifier = { factor = 2 trait = wroth }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 war = yes }
		}
	}
	option = { # Do nothing
		name = EVTOPTCartifact.1005
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = honest }
			modifier = { factor = 2 trait = kind }
			modifier = { factor = 2 war = yes }
			modifier = { factor = 2 ai = yes }
		}
	}
}
# Traveling knight with sword agreed to sell sword
character_event = {
	id = artifact.1006
	desc = EVTDESCartifact.1006
	picture = GFX_evt_knight_kneeling
	
	is_triggered_only = yes
	
	option = { # Perfect
		name = EVTOPTAartifact.1006
		wealth = -200
		add_trait = gwyhyr_sword
	}
	option = { # No he asks too much
		name = EVTOPTBartifact.1006
		ai_chance = { factor = 0 }
	}
}
# Traveling knight with sword declined to sell sword
character_event = {
	id = artifact.1007
	desc = EVTDESCartifact.1007
	picture = GFX_evt_knight_kneeling
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1007
	}
}

################################################
# Living Purple Bone and Conynhaela
################################################
# If own both herbs make them one trait
character_event = {
	id = artifact.1010
	desc = EVTDESCartifact.1010
	picture = GFX_evt_library
	
	trigger = {
		trait = purple_living_bone
		trait = conynhaela
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	option = {
		name = EVTOPTAartifact.1010
		remove_trait = purple_living_bone
		remove_trait = conynhaela
		add_trait = purple_living_bone_and_conynhaela
	}
}
# Event when triggering decision to use the herbs
character_event = {
	id = artifact.1011
	desc = EVTDESCartifact.1011
	picture = GFX_evt_recovery
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1011
		if = {
			limit = { trait = wounded }
			remove_trait = wounded
		}
		if = {
			limit = { trait = maimed }
			remove_trait = maimed
		}
		if = {
			limit = { trait = infirm }
			remove_trait = infirm
		}
		remove_trait = purple_living_bone_and_conynhaela
	}
}
# Finding one of the herbs
character_event = {
	id = artifact.1012
	desc = EVTDESCartifact.1012
	picture = GFX_evt_bandits
	
	only_rulers = yes
	
	trigger = {
		NOT = {trait = purple_living_bone}
		NOT = {trait = conynhaela}
		NOT = {trait = purple_living_bone_and_conynhaela}
		any_demesne_province = { terrain = dryad_forest }
	}
	
	mean_time_to_happen = {
		months = 3500
		modifier = { factor = 0.5 trait = gardener }
		modifier = { factor = 0.7 trait = diligent }
		modifier = { factor = 0.9 trait = patient }
		modifier = { factor = 1.3 trait = slothful }
		modifier = { factor = 1.1 trait = wroth }
	}
	
	option = {
		name = EVTOPTAartifact.1012
		random_list = {
			20 = {
				if = { 
					limit = { NOT = { trait = purple_living_bone } }
					add_trait = purple_living_bone
					hidden_tooltip = { character_event = { id = artifact.1013 } }
				}
			}
			20 = {
				if = { 
					limit = { NOT = { trait = conynhaela } }
					add_trait = conynhaela
					hidden_tooltip = { character_event = { id = artifact.1014 } }
				}
			}
			60 = { }
		}
	}
	option = {
		name = EVTOPTBartifact.1012
		prestige = 20
	}
}
# Getting Conynhaela
character_event = {
	id = artifact.1013
	desc = EVTDESCartifact.1013
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1013
	}
}
# Getting Purple living bone
character_event = {
	id = artifact.1014
	desc = EVTDESCartifact.1014
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1014
	}
}

################################################
# Brinsingamen
################################################
# Brinsingamen appears
character_event = {
	id = artifact.1020
	desc = EVTDESCartifact.1020
	picture = GFX_evt_comet
	
	trigger = {
		NOT = { brinsingamen = { always = yes } }
		religion = freya
		OR = {
			piety = 1000
			AND = {
				trait = zealous
				piety = 500
			}
		}
	}
	
	mean_time_to_happen = {
		months = 120
		modifier = { factor = 0.5 trait = zealous }
		modifier = { factor = 0.8 piety = 750 }
		modifier = { factor = 0.8 piety = 875 }
		modifier = { factor = 0.8 piety = 1000 }
		modifier = { factor = 0.8 piety = 1125 }
		modifier = { factor = 0.8 piety = 1250 }
	}
	
	option = {
		name = EVTOPTAartifact.1020
		add_trait = brinsingamen
	}
}
# Brinsingamen disappears when heir inherits it
character_event = {
	id = artifact.1021
	desc = EVTDESCartifact.1021
	picture = GFX_evt_comet
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1021
	}
}
# Brinsingamen disappears because of religion change
character_event = {
	id = artifact.1022
	desc = EVTDESCartifact.1022
	picture = GFX_evt_comet
	
	trigger = {
		trait = brinsingamen
		NOT = { religion = freya }
	}
	
	mean_time_to_happen = {
		days = 365
	}
	
	option = {
		name = EVTOPTAartifact.1022
		remove_trait = brinsingamen
	}
}

################################################
# Zefhar Bow
################################################
# Merchant offers to sell zefhar bow
character_event = {
	id = artifact.1030
	desc = EVTDESCartifact.1030
	picture = GFX_evt_market
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = zefhar_bow }
		wealth = 150
	}
	
	mean_time_to_happen = {
		months = 5000
		modifier = { factor = 0.5 wealth = 300 }
		modifier = { factor = 0.5 wealth = 600 }
		modifier = { factor = 0.5 wealth = 900 }
		modifier = { factor = 0.5 trait = ambitious }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = trusting }
		modifier = { factor = 1.1 trait = paranoid }
		modifier = { factor = 1.1 trait = greedy }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
			}
		}
	}
	
	option = { # Buy
		name = EVTOPTAartifact.1030
		wealth = -150
		add_trait = zefhar_bow
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = charitable }
			modifier = { factor = 2 trait = trusting }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 300 }
		}
	}
	option = { # Don't buy
		name = EVTOPTBartifact.1030
		hidden_tooltip = {
			random = {
				chance = 20
				character_event = { id = artifact.1031 days = 70 random = 20 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = paranoid }
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = content }
			modifier = { factor = 2 war = yes }
			modifier = { factor = 2 ai = yes }
		}
	}
}
# Bow sold by merchant turned out to be a fake
character_event = {
	id = artifact.1031
	desc = EVTDESCartifact.1031
	picture = GFX_evt_bad_news
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1031
		remove_trait = zefhar_bow
		if = {
			limit = { NOT = { trait = trusting} }
			random = {
				chance = 20
				add_trait = trusting
				hidden_tooltip = { character_event = { id = 38250 } }
			}
		}
	}
}
# A dead poacher in your foest with zephar bow had fallen prey to monsters
character_event = {
	id = artifact.1032
	desc = EVTDESCartifact.1032
	picture = GFX_evt_bandits
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = zefhar_bow }
		wealth = 150
	}
	
	mean_time_to_happen = {
		months = 12000
		modifier = { factor = 0.75 trait = hunter }
		modifier = { factor = 0.75 trait = falconer }
		modifier = { factor = 0.9 trait = diligent }
		modifier = { factor = 0.9 trait = gregarious }
		modifier = { factor = 1.1 trait = slothful }
		modifier = { factor = 1.1 trait = greedy }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
			}
		}
	}
	
	option = { # Take the bow
		name = EVTOPTAartifact.1032
		add_trait = zefhar_bow
		piety = -30
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = cynical }
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = envious }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
		}
	}
	option = { # Bury the corpse with bow
		name = EVTOPTBartifact.1032
		piety = 30
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = kind }
			modifier = { factor = 2 trait = zealous }
			modifier = { factor = 2 trait = elven }
			modifier = { factor = 2 trait = halfelf }
		}
	}
}
# An elven traveler gifts you bow
character_event = {
	id = artifact.1033
	desc = EVTDESCartifact.1033
	picture = GFX_evt_throne_room
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = zefhar_bow }
		OR = { 
			trait = elven
			trait = halfelf
			trait = tolerant
		}
	}
	
	mean_time_to_happen = {
		months = 9000
		modifier = { factor = 0.8 prestige = 200 }
		modifier = { factor = 0.8 prestige = 400 }
		modifier = { factor = 0.8 prestige = 600 }
		modifier = { factor = 0.75 trait = hunter }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = kind }
		modifier = { factor = 0.9 trait = humble }
		modifier = { factor = 1.1 trait = greedy }
		modifier = { factor = 1.1 trait = envious }
		modifier = { factor = 1.1 trait = proud }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = balmur
				trait = loathen
			}
		}
	}
	
	option = { # Take it
		name = EVTOPTAartifact.1033
		add_trait = zefhar_bow
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = hunter }
			modifier = { factor = 2 trait = wroth }
			modifier = { factor = 2 trait = proud }
			modifier = { factor = 2 trait = greedy }
		}
	}
	option = { # No I cannot accept such gift
		name = EVTOPTBartifact.1033
		prestige = 20
		if = {
			limit = { NOT = { trait = kind} }
			random = {
				chance = 30
				add_trait = kind
				hidden_tooltip = { character_event = { id = 38268 } }
			}
		}
		ai_chance = {
			factor = 0
		}
	}
	option = { # How about ending your travels and staying here
		name = EVTOPTCartifact.1033
		create_random_soldier = {
			random_traits = yes
			dynasty = NONE
			female = no
			culture = aen_seidhe
			religion = dana_meadbh
			age = 250
			trait = elven
			trait = zefhar_bow
			trait = hunter
		}
		new_character = {
			change_martial = 2
			remove_trait = inbred
			remove_trait = imbecile
			random_list = {
				50 = { add_trait = trained_warrior }
				50 = { add_trait = skilled_warrior }
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = kind }
			modifier = { factor = 2 trait = humble }
			modifier = { factor = 2 trait = charitable }
		}
	}
}

################################################
# Gveir
################################################
# Rumors about Gveir somwhere in Korath desert
character_event = {
	id = artifact.1040
	desc = EVTDESCartifact.1040
	picture = GFX_evt_spymaster
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { gveir = { always = yes } }
		any_demesne_province = {
			OR = {
				province_id = 368 # Mijara
				province_id = 365 # Ciosuecia
				province_id = 232 # Medemblik
				province_id = 213 # Tecen
				province_id = 206 # Rozvlaha
				province_id = 208 # Rozbohateti
				province_id = 207 # Zlodjejcje
			}
		}
		wealth = 50
		NOT = { has_global_flag = expedition_for_gveir_underway }
	}
	
	mean_time_to_happen = {
		months = 10000
		modifier = { factor = 0.5 wealth = 100 }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = jaskolka
				trait = balmur
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = { # Send expedition to recover it
		name = EVTOPTAartifact.1040
		wealth = -50
		custom_tooltip = {
			text = send_expedition_to_recover_gveir
			hidden_tooltip = {
				random_list = {
					50 = { character_event = { id = artifact.1041 days = 100 random = 20 } }
					50 = { character_event = { id = artifact.1042 days = 300 random = 60 } }
				}
			}
		}
		set_global_flag = expedition_for_gveir_underway
	}
	option = { # They are just baseless rumors
		name = EVTOPTBartifact.1040
		ai_chance = {
			factor = 0
		}
		
	}
}
# Expedition returned with Gveir
character_event = {
	id = artifact.1041
	desc = EVTDESCartifact.1041
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	immediate = {
		clr_global_flag = expedition_for_gveir_underway
	}
	
	option = { # It beautiful sword
		name = EVTOPTAartifact.1041
		add_trait = gveir
	}
	option = { # It's even better than tought, there will be extra rewards
		name = EVTOPTBartifact.1041
		add_trait = gveir
		wealth = -20
		if = {
			limit = { NOT = { trait = charitable } }
			random = {
				chance = 25
				add_trait = charitable
				hidden_tooltip = { character_event = { id = 38273 } }
			}
		}
	}
}
# Expedition never returned
character_event = {
	id = artifact.1042
	desc = EVTDESCartifact.1042
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1042
		clr_global_flag = expedition_for_gveir_underway
	}
}

################################################
# Balmur
################################################
# Rumors about sword in stone
character_event = {
	id = artifact.1050
	desc = EVTDESCartifact.1050
	picture = GFX_evt_spymaster
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { balmur = { always = yes } }
		NOT = {
			has_global_flag = balmur_sword_in_stone
			has_global_flag = balmur_sword_from_lake
		}
		prestige = 100
	}
	
	mean_time_to_happen = {
		months = 40000
		modifier = { factor = 2 trait = gwyhyr_sword }
		modifier = { factor = 0.8 prestige = 200 }
		modifier = { factor = 0.8 prestige = 400 }
		modifier = { factor = 0.8 prestige = 600 }
		modifier = { factor = 0.8 prestige = 800 }
		modifier = { factor = 0.5 tier = emperor }
		modifier = { factor = 0.6 tier = king }
		modifier = { factor = 0.75 tier = duke }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = {
		name = EVTOPTAartifact.1050
		set_global_flag = balmur_sword_in_stone
		character_event = { id = artifact.1051 days = 300 random = 100 }
	}
}
# Sword in stone suddently appears in your courtyard
character_event = {
	id = artifact.1051
	desc = EVTDESCartifact.1051
	picture = GFX_evt_scandal
	
	is_triggered_only = yes
	
	immediate = {
		clr_global_flag = balmur_sword_in_stone
	}
	
	option = { # Try to pull it out
		name = EVTOPTAartifact.1051
		trigger = { trait = strong }
		tooltip_info = strong
		custom_tooltip = {
			text = attempt_to_pull_balmur_out_of_stone
			hidden_tooltip = {
				if = {
					limit = { prestige = 500 }
					add_trait = balmur
				}
				if = {
					limit = { NOT = { prestige = 500 } }
					random_list = {
						50 = {
							add_trait = balmur
							character_event = { id = artifact.1052 days = 3 }
						}
						50 = {
							character_event = { id = artifact.1053 days = 3 }
						}
					}
				}
			}
		}
	}
	option = { # Try to pull it out
		name = EVTOPTAartifact.1051
		trigger = { NOT = { trait = strong } }
		custom_tooltip = {
			text = attempt_to_pull_balmur_out_of_stone
			hidden_tooltip = {
				if = {
					limit = { prestige = 500 }
					add_trait = balmur
				}
				if = {
					limit = { NOT = { prestige = 500 } }
					random_list = {
						80 = {
							add_trait = balmur
							character_event = { id = artifact.1052 }
						}
						20 = {
							character_event = { id = artifact.1053 }
						}
					}
				}
			}
		}
	}
	option = { # I'm not worthy
		name = EVTOPTBartifact.1051
		prestige = 20
		hidden_tooltip = { character_event = { id = artifact.1054 days = 1 } }
		ai_chance = {
			factor = 0
		}
	}
}
# Pulled Balmur from stone
character_event = {
	id = artifact.1052
	desc = EVTDESCartifact.1052
	picture = GFX_evt_scandal
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1052
		add_trait = balmur
	}
}
# Didn't pull Balmur from stone
character_event = {
	id = artifact.1053
	desc = EVTDESCartifact.1053
	picture = GFX_evt_scandal
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1053
	}
}
# Stone with sword dissapear
character_event = {
	id = artifact.1054
	desc = EVTDESCartifact.1054
	picture = GFX_evt_scandal
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1054
	}
}
# Rumors about sword from lake
character_event = {
	id = artifact.1055
	desc = EVTDESCartifact.1055
	picture = GFX_evt_spymaster
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { balmur = { always = yes } }
		NOT = {
			has_global_flag = balmur_sword_in_stone
			has_global_flag = balmur_sword_from_lake
		}
		prestige = 500
	}
	
	mean_time_to_happen = {
		months = 20000
		modifier = { factor = 2 trait = gwyhyr_sword }
		modifier = { factor = 0.8 prestige = 750 }
		modifier = { factor = 0.8 prestige = 875 }
		modifier = { factor = 0.8 prestige = 1000 }
		modifier = { factor = 0.5 tier = emperor }
		modifier = { factor = 0.6 tier = king }
		modifier = { factor = 0.75 tier = duke }
		modifier = {
			factor = 4
			OR = {
				trait = gwyhyr_sword
				trait = sihil
				trait = gveir
				trait = jaskolka
				trait = loathen
				trait = zefhar_bow
			}
		}
	}
	
	option = {
		name = EVTOPTAartifact.1055
		set_global_flag = balmur_sword_from_lake
		character_event = { id = artifact.1056 days = 300 random = 100 }
	}
}
# Hand appeared from lake and gave you sword
character_event = {
	id = artifact.1056
	desc = EVTDESCartifact.1056
	picture = GFX_evt_scandal
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1056
		clr_global_flag = balmur_sword_from_lake
		add_trait = balmur
	}
}

################################################
# Raven's armor
################################################
# Found Raven's armor
character_event = {
	id = artifact.1060
	desc = EVTDESCartifact.1060
	picture = GFX_evt_pagan
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { ravens_armor = { always = yes } }
		wealth = 50
		NOT = { has_global_flag = repairing_ravens_armor }
		location = { county = { de_jure_liege_or_above = e_the_north } }
	}
	
	mean_time_to_happen = {
		months = 20000
		modifier = { factor = 0.5 wealth = 100 }
	}
	
	option = { # Find blacksmith to repair it
		name = EVTOPTAartifact.1060
		set_global_flag = repairing_ravens_armor
		custom_tooltip = {
			text = repair_ravens_armor
			hidden_tooltip = {
				random_list = {
					60 = { character_event = { id = artifact.1061 days = 50 random = 20 } }
					40 = { character_event = { id = artifact.1062 days = 50 random = 20 } }
				}
			}
		}
		wealth = -50
	}
	option = { # Don't repair
		name = EVTOPTBartifact.1060
		ai_chance = { factor = 0 }
	}
}
# Blacksmith repaired Raven's armor
character_event = {
	id = artifact.1061
	desc = EVTDESCartifact.1061
	picture = GFX_evt_market
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1061
		clr_global_flag = repairing_ravens_armor
		add_trait = ravens_armor
	}
}
# Blacksmith couldn't repair Raven's armor
character_event = {
	id = artifact.1062
	desc = EVTDESCartifact.1062
	picture = GFX_evt_market
	
	
	is_triggered_only = yes
	
	option = { # Find better blacksmith
		name = EVTOPTAartifact.1062
		set_global_flag = repairing_ravens_armor
		custom_tooltip = {
			text = repair_ravens_armor_second_try
			hidden_tooltip = {
				random_list = {
					80 = { character_event = { id = artifact.1063 days = 50 random = 20 } }
					20 = { character_event = { id = artifact.1064 days = 50 random = 20 } }
				}
			}
		}
		wealth = -100
		ai_chance = { factor = 0 }
	}
	option = { # Execute current blacksmith better blacksmith
		name = EVTOPTBartifact.1062
		set_global_flag = repairing_ravens_armor
		random = {
			chance = 20
			add_trait = wroth
			hidden_tooltip = { character_event = { id = 38254 } }
		}
		custom_tooltip = {
			text = repair_ravens_armor_second_try
			hidden_tooltip = {
				random_list = {
					85 = { character_event = { id = artifact.1063 days = 70 random = 20 } }
					25 = { character_event = { id = artifact.1064 days = 70 random = 20 } }
				}
			}
		}
		wealth = -100
		ai_chance = { factor = 0 }
	}
	option = { # Don't repair
		name = EVTOPTCartifact.1062
		clr_global_flag = repairing_ravens_armor
	}
}
# Second blacksmith repaired Raven's armor
character_event = {
	id = artifact.1063
	desc = EVTDESCartifact.1063
	picture = GFX_evt_market
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1063
		clr_global_flag = repairing_ravens_armor
		add_trait = ravens_armor
	}
}
# Second blacksmith couldn't repair Raven's armor
character_event = {
	id = artifact.1064
	desc = EVTDESCartifact.1064
	picture = GFX_evt_market
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1064
		clr_global_flag = repairing_ravens_armor
	}
}

################################################
# Nehalenias' Mirror
################################################
# Bought Nehalenias' Mirror from old fortune-teller
character_event = {
	id = artifact.1070
	desc = EVTDESCartifact.1070
	picture = GFX_evt_market
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait =  nehalenias_mirror }
		wealth = 100
	}
	
	mean_time_to_happen = {
		months = 8000
		modifier = { factor = 0.5 wealth = 300 }
		modifier = { factor = 0.5 wealth = 600 }
		modifier = { factor = 0.5 wealth = 900 }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = trusting }
		modifier = { factor = 1.5 trait = paranoid }
		modifier = { factor = 1.5 trait = greedy }
	}
	
	option = {
		name = EVTOPTAartifact.1070
		add_trait = nehalenias_mirror
		wealth = -100
	}
	option = {
		name = EVTOPTBartifact.1070
		ai_chance = { factor = 0 }
	}
}

################################################
# Seeing Stone
################################################
# Bought Seeing Stone
character_event = {
	id = artifact.1080
	desc = EVTDESCartifact.1080
	picture = GFX_evt_throne_room
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait =  seeing_stone }
		wealth = 100
	}
	
	mean_time_to_happen = {
		months = 8000
		modifier = { factor = 0.5 wealth = 300 }
		modifier = { factor = 0.5 wealth = 600 }
		modifier = { factor = 0.5 wealth = 900 }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = trusting }
		modifier = { factor = 1.5 trait = paranoid }
		modifier = { factor = 1.5 trait = greedy }
	}
	
	option = {
		name = EVTOPTAartifact.1080
		add_trait = seeing_stone
		wealth = -100
	}
	option = {
		name = EVTOPTBartifact.1080
		ai_chance = { factor = 0 }
	}
}

################################################
# Sephirah - ways to get somewhat similar to how they are goten in game
################################################
# Chocc'mah - Gotten if alchemist
# Ghe'vrath, 'Oth, Veen'ah - Gotten if Melitele follower
# Keth'aar - Gotten if own a city
# Kezath - Gotten if own a province with swamp terrain
# Maal'kad - Gotten if ahve monster infestation
# Neh'tza - Gotten anywhere
# Tipperath - Gotten if merchant
# Y'esath - Gotten if own a province with mountain terrain

namespace = artifact

################################################
# Passing artifacts (breaks if more than 3 characters with artifacts die at same time)
################################################
# Hidden - Selecting heir for artifacts (on_death)
character_event = {
	id = artifact.1
	desc = "Select heir for artifacts"
	picture = GFX_evt_death
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		OR = {
			trait = gwyhyr_sword
			trait = nehalenias_mirror
			trait = purple_living_bone
			trait = conynhaela
			trait = purple_living_bone_and_conynhaela
		}
	}
	
	immediate = { # Select the best heir and give him a temp cached trait
		if = { # Dynastic heir
			limit = {
				is_patrician = no
				current_heir = { dynasty = ROOT NOT = { character = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			current_heir = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Child
			limit = {
				is_patrician = no
				any_child = { dynasty = ROOT is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_child = {
				limit = { dynasty = ROOT is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Sibling
			limit = {
				is_patrician = no
				any_sibling = { is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_sibling = {
				limit = { is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Close dynasty member
			limit = {
				is_patrician = no
				any_dynasty_member = { is_close_relative = ROOT is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_dynasty_member = {
				limit = { is_close_relative = ROOT is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Dynasty member
			limit = {
				is_patrician = no
				any_dynasty_member = { NOT = { is_close_relative = ROOT } is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_dynasty_member = {
				limit = { NOT = { is_close_relative = ROOT } is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Bastard child
			limit = {
				is_patrician = no
				any_child = { NOT = { dynasty = ROOT } is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_child = {
				limit = { NOT = { dynasty = ROOT } is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Spouse
			limit = {
				is_patrician = no
				spouse = { is_alive = yes }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			spouse = {
				limit = { is_alive = yes }
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Non-dynastic heir
			limit = {
				is_patrician = no
				current_heir = { NOT = { dynasty = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			current_heir = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Liege
			limit = {
				is_patrician = no
				liege = { NOT = { character = ROOT } }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			liege = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Vassal
			limit = {
				is_patrician = no
				liege = { character = ROOT }
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			random_vassal = {
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
					set_character_flag = artifact_heir_temp_3
					ROOT = { add_trait = artifact_temp_3 }
				}
				if = {
					limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
					set_character_flag = artifact_heir_temp_2
					ROOT = { add_trait = artifact_temp_2 }
				}
				if = {
					limit = { NOT = { artifact_heir_temp = { always = yes } } }
					set_character_flag = artifact_heir_temp_1
					ROOT = { add_trait = artifact_temp_1 }
				}
				add_trait = artifact_heir_temp
			}
		}
		if = { # Family manor heir for republics
			limit = {
				is_patrician = yes
				NOT = {
					trait = artifact_temp_1
					trait = artifact_temp_2
					trait = artifact_temp_3
				}
			}
			family_palace = {
				current_heir = {
					if = {
						limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_2 } }
						set_character_flag = artifact_heir_temp_3
						ROOT = { add_trait = artifact_temp_3 }
					}
					if = {
						limit = { artifact_heir_temp = { has_character_flag = artifact_heir_temp_1 } }
						set_character_flag = artifact_heir_temp_2
						ROOT = { add_trait = artifact_temp_2 }
					}
					if = {
						limit = { NOT = { artifact_heir_temp = { always = yes } } }
						set_character_flag = artifact_heir_temp_1
						ROOT = { add_trait = artifact_temp_1 }
					}
					add_trait = artifact_heir_temp
				}
			}
		}
	}
	
	option = { # Character with cached trait gets event
		name = "OK"
		if = {
			limit = { ai = no }
			artifact_heir_temp = { character_event = { id = artifact.2 days = 1 } }
		}
		if = {
			limit = { ai = yes }
			artifact_heir_temp = { character_event = { id = artifact.2 } }
		}
	}
}
# Heir - Getting artifacts
character_event = {
	id = artifact.2
	desc = EVTDESCartifact.2
	picture = GFX_evt_death
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			AND = {
				FROM = { trait = artifact_temp_1 }
				has_character_flag = artifact_heir_temp_1
			}
			AND = {
				FROM = { trait = artifact_temp_2 }
				has_character_flag = artifact_heir_temp_2
			}
			AND = {
				FROM = { trait = artifact_temp_3 }
				has_character_flag = artifact_heir_temp_3
			}
		}
	}
	
	option = {
		name = EVTOPTAartifact.2
		if = {
			limit = { FROM = { trait = gwyhyr_sword } }
			FROM = { remove_trait = gwyhyr_sword }
			add_trait = gwyhyr_sword
		}
		if = {
			limit = { FROM = { trait = nehalenias_mirror } }
			FROM = { remove_trait = nehalenias_mirror }
			add_trait = nehalenias_mirror
		}
		if = {
			limit = { FROM = { trait = purple_living_bone } }
			FROM = { remove_trait = purple_living_bone }
			add_trait = purple_living_bone
		}
		if = {
			limit = { FROM = { trait = conynhaela } }
			FROM = { remove_trait = conynhaela }
			add_trait = conynhaela
		}
		if = {
			limit = { FROM = { trait = purple_living_bone_and_conynhaela } }
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			add_trait = purple_living_bone_and_conynhaela
		}
		hidden_tooltip = {
			remove_trait = artifact_heir_temp
			clr_character_flag = artifact_heir_temp_1
			clr_character_flag = artifact_heir_temp_2
			clr_character_flag = artifact_heir_temp_3
			FROM = {
				remove_trait = artifact_temp_1
				remove_trait = artifact_temp_2
				remove_trait = artifact_temp_3
			}
		}
	}
}

################################################
# Confiscating artifacts from prisoner
################################################
# Confiscating artifacts from prisoner
character_event = {
	id = artifact.100
	desc = EVTDESCartifact.100
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.100
		FROM = { opinion = { modifier = opinion_dishonorable who = ROOT } }
		# Gwyhyr sword
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				NOT = { trait = gwyhyr_sword }
			}
			FROM = { remove_trait = gwyhyr_sword }
			ROOT = { add_trait = gwyhyr_sword }
		}
		if = {
			limit = {
				FROM = { trait = gwyhyr_sword }
				trait = gwyhyr_sword
			}
			FROM = { remove_trait = gwyhyr_sword }
			character_event = { id = artifact.101 tooltip = EVTTOOLTIPartifact.101 }
		}
		# Nehalenia's Mirror
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				NOT = { trait = nehalenias_mirror }
			}
			FROM = { remove_trait = nehalenias_mirror }
			ROOT = { add_trait = nehalenias_mirror }
		}
		if = {
			limit = {
				FROM = { trait = nehalenias_mirror }
				trait = nehalenias_mirror
			}
			FROM = { remove_trait = nehalenias_mirror }
			character_event = { id = artifact.102 tooltip = EVTTOOLTIPartifact.102 }
		}
		# Purple living bone
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = purple_living_bone }
			ROOT = { add_trait = purple_living_bone }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone }
			character_event = { id = artifact.103 tooltip = EVTTOOLTIPartifact.103 }
		}
		# Conynhaela
		if = {
			limit = {
				FROM = { trait = conynhaela }
				NOT = { trait = conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
			}
			FROM = { remove_trait = conynhaela }
			ROOT = { add_trait = conynhaela }
		}
		if = {
			limit = {
				FROM = { trait = conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = conynhaela }
			character_event = { id = artifact.105 tooltip = EVTTOOLTIPartifact.105 }
		}
		# Living purple bone and Conynhaela
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone }
				NOT = { trait = conynhaela }
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			ROOT = { add_trait = purple_living_bone_and_conynhaela }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone_and_conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			character_event = { id = artifact.107 tooltip = EVTTOOLTIPartifact.107 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = purple_living_bone
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			character_event = { id = artifact.104 tooltip = EVTTOOLTIPartifact.104 }
		}
		if = {
			limit = {
				FROM = { trait = purple_living_bone_and_conynhaela }
				NOT = { trait = purple_living_bone_and_conynhaela }
				trait = conynhaela
			}
			FROM = { remove_trait = purple_living_bone_and_conynhaela }
			character_event = { id = artifact.106 tooltip = EVTTOOLTIPartifact.106 }
		}
	}
	option = {
		name = EVTOPTBartifact.100
	}
}
# Already have Gwyhyr sword
character_event = {
	id = artifact.101
	desc = EVTDESCartifact.101
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.101
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.101
		trigger = {
			any_dynasty_member = {
				NOT = { trait = gwyhyr_sword }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = gwyhyr_sword }
				is_close_relative = ROOT
			}
			add_trait = gwyhyr_sword
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to marshal
		name = EVTOPTBartifact.101
		trigger = {
			job_marshal = { NOT = { trait = gwyhyr_sword } }
		}
		job_marshal = {
			limit = { NOT = { trait = gwyhyr_sword } }
			add_trait = gwyhyr_sword
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Nehalenia's Mirror
character_event = {
	id = artifact.102
	desc = EVTDESCartifact.102
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.102
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.102
		trigger = {
			any_dynasty_member = {
				NOT = { trait = nehalenias_mirror }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = nehalenias_mirror }
				is_close_relative = ROOT
			}
			add_trait = nehalenias_mirror
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
	option = { # Give it to spouse
		name = EVTOPTBartifact.102
		trigger = {
			spouse = { NOT = { trait = nehalenias_mirror } }
		}
		spouse = {
			limit = { NOT = { trait = nehalenias_mirror } }
			add_trait = nehalenias_mirror
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}
# Already have Living purple bone
character_event = {
	id = artifact.103
	desc = EVTDESCartifact.103
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.103
		wealth = 50
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.103
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Getting both herbs when already have Living purple bone
character_event = {
	id = artifact.104
	desc = EVTDESCartifact.104
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell Living purple bone
		name = EVTOPTAartifact.104
		wealth = 50
		remove_trait = purple_living_bone
		add_trait = purple_living_bone_and_conynhaela
	}
	option = { # Give Living purple bone to relative
		name = EVTOPTBartifact.104
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Already have Conynhaela
character_event = {
	id = artifact.105
	desc = EVTDESCartifact.105
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.105
		wealth = 50
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.105
		trigger = {
			any_dynasty_member = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
			add_trait = conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Getting both herbs when already have Conynhaela
character_event = {
	id = artifact.106
	desc = EVTDESCartifact.106
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell Conynhaela
		name = EVTOPTAartifact.106
		wealth = 50
		remove_trait = conynhaela
		add_trait = purple_living_bone_and_conynhaela
	}
	option = { # Give Conynhaela to relative
		name = EVTOPTBartifact.106
		trigger = {
			any_dynasty_member = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = conynhaela }
				is_close_relative = ROOT
			}
			add_trait = conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 30 }
		}
	}
}
# Already have Living purple bone and Conynhaela
character_event = {
	id = artifact.107
	desc = EVTDESCartifact.107
	picture = GFX_evt_into_the_dungeon
	
	is_triggered_only = yes
	
	option = { # Sell it
		name = EVTOPTAartifact.107
		wealth = 100
	}
	option = { # Give it to relative
		name = EVTOPTBartifact.107
		trigger = {
			any_dynasty_member = {
				NOT = { trait = purple_living_bone_and_conynhaela }
				is_close_relative = ROOT
			}
		}
		random_dynasty_member = {
			limit = {
				NOT = { trait = purple_living_bone_and_conynhaela }
				is_close_relative = ROOT
			}
			add_trait = purple_living_bone_and_conynhaela
			opinion = { modifier = opinion_very_grateful who = ROOT months = 60 }
		}
	}
}

################################################
# Gwyhyr swords
################################################
# Ping - Courtier offers to sell his sword
character_event = {
	id = artifact.1000
	desc = "Ping"
	picture = GFX_evt_emissary
	
	capable_only = yes
	
	trigger = {
		trait = gwyhyr_sword
		NOT = { trait = master_warrior }
		NOT = { trait = skilled_warrior }
		NOT = { trait = trained_warrior }
		liege = {
			wealth = 100
			NOT = { trait = gwyhyr_sword }
		}
	}
	
	mean_time_to_happen = {
		months = 60
		modifier = { factor = 0.5 liege = { wealth = 200 } }
		modifier = { factor = 0.5 liege = { wealth = 300 } }
		modifier = { factor = 0.5 liege = { wealth = 400 } }
	}
	
	option = {
		name = "OK"
		liege = { character_event = { id = artifact.1001 } }
	}
}
# Liege - Courtier offers to sell his sword
character_event = {
	id = artifact.1001
	desc = EVTDESCartifact.1001
	picture = GFX_evt_emissary
	
	is_triggered_only = yes
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	
	option = { # Buy
		name = EVTOPTAartifact.1001
		FROM = {
			wealth = 100
			remove_trait = gwyhyr_sword
		}
		wealth = -100
		add_trait = gwyhyr_sword
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = proud }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 200 }
		}
	}
	option = { # Don't buy
		name = EVTOPTBartifact.1001
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = content }
			modifier = { factor = 2 war = yes }
		}
	}
}
# Merchant offers to sell sword
character_event = {
	id = artifact.1002
	desc = EVTDESCartifact.1002
	picture = GFX_evt_emissary
	
	only_rulers = yes
	min_age = 15
	capable_only = yes
	
	trigger = {
		NOT = { trait = gwyhyr_sword }
		wealth = 150
	}
	
	mean_time_to_happen = {
		months = 5000
		modifier = { factor = 0.5 wealth = 300 }
		modifier = { factor = 0.5 wealth = 600 }
		modifier = { factor = 0.5 wealth = 900 }
		modifier = { factor = 0.5 trait = ambitious }
		modifier = { factor = 0.9 trait = charitable }
		modifier = { factor = 0.9 trait = trusting }
		modifier = { factor = 1.1 trait = paranoid }
		modifier = { factor = 1.1 trait = greedy }
	}
	
	option = { # Buy
		name = EVTOPTAartifact.1002
		wealth = -150
		add_trait = gwyhyr_sword
		hidden_tooltip = {
			random = {
				chance = 20
				character_event = { id = artifact.1003 days = 365 random = 50 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = charitable }
			modifier = { factor = 2 trait = trusting }
			modifier = { factor = 1.5 trait = master_warrior }
			modifier = { factor = 1.5 trait = skilled_warrior }
			modifier = { factor = 2 wealth = 300 }
		}
	}
	option = { # Don't buy
		name = EVTOPTBartifact.1002
		ai_chance = {
			factor = 1
			modifier = { factor = 2 trait = paranoid }
			modifier = { factor = 2 trait = greedy }
			modifier = { factor = 2 trait = content }
			modifier = { factor = 2 war = yes }
			modifier = { factor = 2 ai = yes }
		}
	}
}
# Sword sold by merchant turned out to be a fake
character_event = {
	id = artifact.1003
	desc = EVTDESCartifact.1003
	picture = GFX_evt_bad_news
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1003
		remove_trait = gwyhyr_sword
		if = {
			limit = { NOT = { trait = trusting} }
			random = {
				chance = 20
				add_trait = trusting
				hidden_tooltip = { character_event = { id = 38250 } }
			}
		}
	}
}

################################################
# Living purple bone and Conynhaela
################################################
# If own both herbs make them one trait
character_event = {
	id = artifact.1010
	desc = EVTDESCartifact.1010
	picture = GFX_evt_library
	
	trigger = {
		trait = purple_living_bone
		trait = conynhaela
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	option = {
		name = EVTOPTAartifact.1010
		remove_trait = purple_living_bone
		remove_trait = conynhaela
		add_trait = purple_living_bone_and_conynhaela
	}
}
# Event when triggering decision to use the herbs
character_event = {
	id = artifact.1011
	desc = EVTDESCartifact.1011
	picture = GFX_evt_recovery
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1011
		if = {
			limit = { trait = wounded }
			remove_trait = wounded
		}
		if = {
			limit = { trait = maimed }
			remove_trait = maimed
		}
		if = {
			limit = { trait = infirm }
			remove_trait = infirm
		}
		remove_trait = purple_living_bone_and_conynhaela
	}
}
# Finding one of the herbs (on_five_year_pulse)
character_event = {
	id = artifact.1012
	desc = EVTDESCartifact.1012
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	
	only_rulers = yes
	
	trigger = {
		NOT = {trait = purple_living_bone}
		NOT = {trait = conynhaela}
		NOT = {trait = purple_living_bone_and_conynhaela}
		any_demesne_province = { terrain = dryad_forest }
	}
	
	weight_multiplier = {
		days = 1
	}
	
	option = {
		name = EVTOPTAartifact.1012
		random_list = {
			20 = {
				if = { 
					limit = { NOT = { trait = purple_living_bone } }
					add_trait = purple_living_bone
					hidden_tooltip = { character_event = { id = artifact.1013 }}
				}
			}
			20 = {
				if = { 
					limit = { NOT = { trait = conynhaela } }
					add_trait = conynhaela
					hidden_tooltip = { character_event = { id = artifact.1014 }}
				}
			}
			60 = { }
		}
	}
	option = {
		name = EVTOPTBartifact.1012
		prestige = 20
	}
}
# Getting Conynhaela
character_event = {
	id = artifact.1013
	desc = EVTDESCartifact.1013
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1013
	}
}
# Getting Purple living bone
character_event = {
	id = artifact.1014
	desc = EVTDESCartifact.1014
	picture = GFX_evt_bandits
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAartifact.1014
	}
}

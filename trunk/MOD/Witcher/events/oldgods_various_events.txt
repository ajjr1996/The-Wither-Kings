###################################
#
# THE OLD GODS 
# - Various Events
#
###################################

# Written by Henrik Eklund

namespace = TOG

### Looting Events

# +2 Axe
character_event = {
	id = TOG.3300
	desc = EVTDESC_TOG_3300
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_war
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		NOT = { has_character_flag = loot_axe }
	}
	
	option = {
		name = EVTOPTA_TOG_3300
		set_character_flag = loot_axe
		change_martial = 2
	}
}

# Strange Chest
character_event = {
	id = TOG.3301
	desc = EVTDESC_TOG_3301
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		NOT = { 
			has_dynasty_flag = strange_chest 
			has_character_flag = found_chest
		}
	}
	
	option = {
		name = EVTOPTA_TOG_3301
		custom_tooltip = { text = found_chest }
		set_dynasty_flag = strange_chest
		set_character_flag = found_chest
	}
}

# Key Found
character_event = {
	id = TOG.3302
	desc = EVTDESC_TOG_3302
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		has_dynasty_flag = strange_chest
		has_character_flag = found_chest
	}
	
	option = {
		name = EVTOPTA_TOG_3302
		custom_tooltip = {
			text = opens_chest
			hidden_tooltip = {
				random_list = {
					40 = { character_event = { id = TOG.3306 } }
					40 = { character_event = { id = TOG.3307 } }
					40 = { character_event = { id = TOG.3308 } }
					5 = { character_event = { id = TOG.3309 } }
				}
			}
		}
	}
}

# Key Found by Child or relative
character_event = {
	id = TOG.3303
	desc = EVTDESC_TOG_3303
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		has_dynasty_flag = strange_chest
		NOT = { 
			has_character_flag = found_chest
			any_dynasty_member = {
				has_character_flag = found_chest
			}
		}
	}
	
	option = {
		name = EVTOPTA_TOG_3303
		custom_tooltip = {
			text = opens_chest
			hidden_tooltip = {
				random_list = {
					40 = { character_event = { id = TOG.3306 } }
					40 = { character_event = { id = TOG.3307 } }
					40 = { character_event = { id = TOG.3308 } }
					5 = { character_event = { id = TOG.3309 } }
				}
			}
		}
	}
}

# Chest Opened, Contains Gold
character_event = {
	id = TOG.3306
	desc = EVTDESC_TOG_3306
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3306
		wealth = 200
		clr_dynasty_flag = strange_chest
	}
}

# Chest Opened, Contains Parchments
character_event = {
	id = TOG.3307
	desc = EVTDESC_TOG_3307
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3307
		custom_tooltip = { text = chest_empty }
		clr_dynasty_flag = strange_chest
	}
}

# Chest Opened, Contains Junk
character_event = {
	id = TOG.3308
	desc = EVTDESC_TOG_3308
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3308
		wealth = 10
		clr_dynasty_flag = strange_chest
	}
}

# Chest Opened, Contains Seraphim
character_event = {
	id = TOG.3309
	desc = EVTDESC_TOG_3309
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3309
		custom_tooltip = { text = seraphims }
		clr_dynasty_flag = strange_chest
	}
}
